version: 2.1
jobs:
  # It consists of two steps
  gke_create_cluster:
    #This step will deploy the new cluster on GKE
    docker: 
      - image: ariv3ra/terraform-gcp:latest
    environment:
      CLOUDSDK_CORE_PROJECT: servian-tech-challenge
    steps:
      - checkout
      - run:
          name: Create GKE cluster
          command: |
            echo $TF_CLOUD_TOKEN | base64 -d > $HOME/.terraformrc
            echo $GOOGLE_CLOUD_KEYS | base64 -d > $HOME/gcloud_keys.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud_keys.json
            cd iac_gke_cluster/
            terraform init
            terraform plan -var credentials=$HOME/gcloud_keys.json -out=plan.txt
            terraform apply plan.txt
            

  gke_deploy_app:
    #This step will deploy app on GKE
    environment:
      CLOUDSDK_CORE_PROJECT: servian-tech-challenge
      CLOUDSDK_CORE_DISABLE_PROMPTS: 1
    machine: true
    steps:
      - checkout
      - run:
          name: Deploy app on GKE
          command: |
            docker logout
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            echo $GOOGLE_CLOUD_KEYS | base64 -d > $HOME/gcloud_keys.json
            curl https://sdk.cloud.google.com | bash > /dev/null;
            source $HOME/google-cloud-sdk/path.bash.inc
            gcloud components update kubectl
            gcloud auth activate-service-account --key-file=${HOME}/gcloud_keys.json
            gcloud config set project servian-tech-challenge
            gcloud config set compute/zone us-central1-a
            gcloud container clusters get-credentials servian-app-v2
            gcloud container clusters upgrade servian-app-v2 --master
            docker build -t dipsprajapati/serviantechchallenge-app:latest -f ./TechChallengeAppResponse/TechChallengeApp/Dockerfile ./TechChallengeAppResponse/TechChallengeApp
            docker push dipsprajapati/serviantechchallenge-app:latest
            kubectl apply -f k8s
            kubectl set image deployments/app-deployment app=dipsprajapati/serviantechchallenge-app:latest


workflows:
  build_test:
    jobs:
      - gke_create_cluster
      - gke_deploy_app:
        #This step depends on the completion of gke_create_cluster
          requires:
            - gke_create_cluster

